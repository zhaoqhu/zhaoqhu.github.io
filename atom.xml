<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-09-20T13:49:47+08:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">Zhao Q.H.’s Notes</title><subtitle>Keep It Simple, Stupid</subtitle><author><name>Zhao Q.H.</name></author><entry><title type="html">Go 语言学习笔记</title><link href="http://localhost:4000/go/2025/09/18/go-study-note/" rel="alternate" type="text/html" title="Go 语言学习笔记" /><published>2025-09-18T00:00:00+08:00</published><updated>2025-09-18T00:00:00+08:00</updated><id>http://localhost:4000/go/2025/09/18/go-study-note</id><content type="html" xml:base="http://localhost:4000/go/2025/09/18/go-study-note/">&lt;h2 id=&quot;数据类型&quot;&gt;数据类型&lt;/h2&gt;
&lt;h3 id=&quot;基础类型&quot;&gt;基础类型&lt;/h3&gt;
&lt;h4 id=&quot;布尔&quot;&gt;布尔&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var b1 bool
b1 = true
b2 := false
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;字符串&quot;&gt;字符串&lt;/h4&gt;
&lt;p&gt;string 和 byte[]，string可以直接转换成byte字节切片&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	var (
		str1 string = &quot;hello string&quot;
	)
	str2 := &quot;hello str2&quot;
	fmt.Println(str1, str2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;整型&quot;&gt;整型&lt;/h4&gt;
&lt;p&gt;11种内置整数类型：int8、uint8、int16、uint16、int32、uint32、int64、uint64、int、uint和uintptr&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var a int = 10
var i1, i2 int = 10, 20
i3 := 30                  //默认类型是int
fmt.Println(i1, i2, i3)
fmt.Printf(&quot;i1 type is %T\n &quot;, i1)
fmt.Printf(&quot;i3 type is %T\n\n &quot;, i3)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;浮点型&quot;&gt;浮点型&lt;/h4&gt;
&lt;p&gt;两种内置浮点数类型：float32和float64。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var f1 float32 = 3.14
f2 := 3.14              //默认数据类型是float64
fmt.Println(f1, f2)
fmt.Printf(&quot;f2 type is %T\n &quot;, f2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;复数&quot;&gt;复数&lt;/h4&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var cmp1 complex64 = 1 + 2i
cmp2 := 2 + 4i        //默认值是complex128
fmt.Println(cmp1, cmp2)
fmt.Printf(&quot;cmp2 type is %T\n&quot;, cmp2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;零型&quot;&gt;零型&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;var (
  zb   bool
  zs   string
  zi   int
  zf   float64
  zcmp complex128
)
fmt.Println(zb, zs, zi, zf, zcmp)
输出结果为
false  0 0 (0+0i)

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;复合类型&quot;&gt;复合类型&lt;/h3&gt;
&lt;h4 id=&quot;数组&quot;&gt;数组&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;定义数组
    &lt;ul&gt;
      &lt;li&gt;var 变量名 [长度]类型&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;初始化定义数组
    &lt;ol&gt;
      &lt;li&gt;var 变量名 = [长度]类型{v1,v2,v3}&lt;/li&gt;
      &lt;li&gt;var 变量名 = […]类型{v1,v2,v3}&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
// 冒泡排序
for i := 0; i &amp;lt; len(arr)-1; i++ {
  for j := 0; j &amp;lt; len(arr)-1-i; j++ {
    if arr[j] &amp;lt; arr[j+1] {
      arr[j], arr[j+1] = arr[j+1], arr[j]
    }
    fmt.Println(&quot;aa:&quot;, arr)
  }
  fmt.Println(&quot;aaa:&quot;, arr)
}

fmt.Println(arr)

//多维数组定义和遍历
var arr3 = [3][2]int{ {1, 2}, {3, 4}, {5, 6}}
for i := 0; i &amp;lt; len(arr3); i++ {
  for j := 0; j &amp;lt; len(arr3[i]); j++ {
    fmt.Printf(&quot;%d &quot;, arr3[i][j])
  }
}
for _, val := range arr3 {
  for index2, val2 := range val {
    fmt.Printf(&quot;index is %d,val is %d \n&quot;, index2, val2)
  }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;切片&quot;&gt;切片&lt;/h4&gt;
&lt;p&gt;引用类型&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;定义切片
    &lt;ul&gt;
      &lt;li&gt;var 变量名 []类型，不需要指定长度。&lt;/li&gt;
      &lt;li&gt;变量名 := make([]int,len,cap)，这种需要合理预估切片容量大小，如果预估过大会造成内存浪费，预估准确会提升性能。
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;slice1 := make([]int, 0)
fmt.Printf(&quot;slice1 type is %T\n&quot;, slice1)
fmt.Println(slice1 == nil)
slice1 = append(slice1, 1)
slice1 = append(slice1, 2, 3, 4)
fmt.Println(slice1 == nil)
fmt.Println(slice1)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;切片常用操作
    &lt;ul&gt;
      &lt;li&gt;添加，append&lt;/li&gt;
      &lt;li&gt;截取，slice[start:end]，start或者end都可以省略&lt;/li&gt;
      &lt;li&gt;复制，copy(目标切片，源切片)，复制覆盖同位置的元素，不会改变切片的长度。&lt;/li&gt;
      &lt;li&gt;删除,slice[:2],删除第二个以后所有的元素，slice[2:]，删除第二个和前面的元素
        &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;slice1 := []int{1, 2, 3}
slice2 := []int{4, 5, 6}
slice1 = append(slice1, 7)
//slice1 = slice1[:2]
copy(slice1, slice2)
fmt.Println(slice1, slice2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;h4 id=&quot;集合映射&quot;&gt;集合、映射&lt;/h4&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;定义方式
    &lt;ul&gt;
      &lt;li&gt;map[键的类型]值的类型&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
 //定义一个空集合、映射。
ma := map[string]int{}
ma[&quot;a&quot;] = 1
fmt.Println(ma)
//初始化定义一个非空集合、映射。
m1 := map[string]int{&quot;a&quot;: 1, &quot;b&quot;: 2}
//定义一个空集合、映射。
m2 := make(map[string]string)
//m2[&quot;a&quot;] = 1
m2[&quot;b&quot;] = &quot;hello&quot;
//m2[3] = 3.14
m2[&quot;name&quot;] = &quot;tom&quot;
m2[&quot;age&quot;] = &quot;20&quot;
m2[&quot;city&quot;] = &quot;beijing&quot;
delete(m2, &quot;city&quot;)
//m2[&quot;city&quot;] = &quot;shanghai&quot;
//将json字符串转换成map集合。
var j string
j = `{&quot;infos&quot;:[{&quot;name&quot;:&quot;tom&quot;,&quot;age&quot;:20,&quot;city&quot;:&quot;beijing&quot;},{&quot;name&quot;:&quot;jack&quot;,&quot;age&quot;:22,&quot;city&quot;:&quot;shanghai&quot;}]}`
fmt.Println(j)
var m3 = map[string]any{}
json.Unmarshal([]byte(j), &amp;amp;m3)
for key, val := range m3 {
  fmt.Println(&quot;key is &quot;, key)
  fmt.Println(&quot;val is &quot;, val)
  //valSlice := val.([]interface{})
  //valSlice := val.([]any)
  valSlice := val.([]interface{})
  for index, val2 := range valSlice {
    fmt.Println(&quot;index is &quot;, index)
    fmt.Println(&quot;val2 is &quot;, val2)
    valMap := val2.(map[string]any)
    for key3, val3 := range valMap {
      fmt.Printf(&quot;key3 is %s,val3 is %v \n&quot;, key3, val3)
    }
  }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;函数&quot;&gt;函数&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func sum(a,b int) int{
  return a+b
}
func main(){
  sumInt := sum(1,2)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;方法&quot;&gt;方法&lt;/h4&gt;

&lt;p&gt;函数和方法的区别是方法有一个类型接收者。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type Age int

func (age Age) Hello() {
	fmt.Println(&quot;hello&quot;, age)
}
func main(){
  age := Age(10)
  age.Hello
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;结构体&quot;&gt;结构体&lt;/h4&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type Book struct {
	Name   string
	Price  float64
	Author string
	Page   int
}
//结构体定义方法
func (b Book) HelloName() {
	fmt.Println(&quot;book name is &quot;, b.Name)
}
func (b Book) Pages() int {
	return b.Page
}
func (b *Book) SetPages(page int) int {
	b.Page = page
	return b.Page
}
function main(){
  Book1 := Book{Name: &quot;Go&quot;,Price: 66.6, Author: &quot;tom&quot;}
  Book1.HelloName()
  var Book1 Book
	Book1.SetPages(200)
	pages := Book1.Pages()
	fmt.Println(pages)
	return
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;接口&quot;&gt;接口&lt;/h4&gt;
&lt;ul&gt;
  &lt;li&gt;接口的定义
  接口的定义与结构体稍微有些差别，虽然都以type关键字开始，但接口的关键字是interface，表示定义的类型是一个接口。&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type Stringer interface {
  String() string
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;接口的实现
  接口的实现者必须是一个具体的类型，以person结构体为例，让它来实现Stringer接口，如下面的代码所示&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;type Stringer interface {
  String() string
}
type Address struct {
    province string
    city string
}
type Person struct{
  Name String
  Age int
  Address Address
}
func (p Person) String() string {
  return fmt.Sprintf(&quot;the name is %s,age is %d&quot;,p.name,p.age)

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;指针&quot;&gt;指针&lt;/h4&gt;
&lt;h4 id=&quot;通道&quot;&gt;通道&lt;/h4&gt;
&lt;p&gt;​​不要在同一个 goroutine 中，对无缓冲 channel 顺序执行先接收后发送或先发送后接收的操作​​，这会导致该 goroutine 阻塞，从而使后续的配对操作没有机会执行。务必让它们在两个不同的 goroutine 中并发执行。&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;func main(){
ch3 := make(chan int)
go func() {
  ch3 &amp;lt;- 100
}()
ch100 := &amp;lt;-ch3
fmt.Println(&quot;ch100 is &quot;, ch100)
return
ch2 := make(chan int, 1)  //带缓冲区的通道
ch2 &amp;lt;- 1
//ch2 &amp;lt;- 2
cha1 := &amp;lt;-ch2
//cha2 := &amp;lt;-ch2
fmt.Println(cha1)
return
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;type关键字&quot;&gt;type关键字&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;//自定义类型（在基本类型基础上），使用大小驼峰，大驼峰代表导出，小驼峰只在包内。
type MyInt int
type myInt int
//结构体
type ShoppingCart struct{

}
//接口
type Formatter interface{

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;类型断言&quot;&gt;类型断言&lt;/h2&gt;</content><author><name>Zhao Q.H.</name></author><category term="Go" /><summary type="html">数据类型 基础类型 布尔 var b1 bool b1 = true b2 := false 字符串 string 和 byte[]，string可以直接转换成byte字节切片 var ( str1 string = &quot;hello string&quot; ) str2 := &quot;hello str2&quot; fmt.Println(str1, str2) 整型 11种内置整数类型：int8、uint8、int16、uint16、int32、uint32、int64、uint64、int、uint和uintptr var a int = 10 var i1, i2 int = 10, 20 i3 := 30 //默认类型是int fmt.Println(i1, i2, i3) fmt.Printf(&quot;i1 type is %T\n &quot;, i1) fmt.Printf(&quot;i3 type is %T\n\n &quot;, i3) 浮点型 两种内置浮点数类型：float32和float64。 var f1 float32 = 3.14 f2 := 3.14 //默认数据类型是float64 fmt.Println(f1, f2) fmt.Printf(&quot;f2 type is %T\n &quot;, f2) 复数 var cmp1 complex64 = 1 + 2i cmp2 := 2 + 4i //默认值是complex128 fmt.Println(cmp1, cmp2) fmt.Printf(&quot;cmp2 type is %T\n&quot;, cmp2) 零型</summary></entry><entry><title type="html">Redis</title><link href="http://localhost:4000/redis/2025/09/16/redis/" rel="alternate" type="text/html" title="Redis" /><published>2025-09-16T00:00:00+08:00</published><updated>2025-09-16T00:00:00+08:00</updated><id>http://localhost:4000/redis/2025/09/16/redis</id><content type="html" xml:base="http://localhost:4000/redis/2025/09/16/redis/">&lt;h2 id=&quot;redis高频面试题&quot;&gt;Redis高频面试题&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;缓存穿透
    &lt;ul&gt;
      &lt;li&gt;问题描述&lt;/li&gt;
      &lt;li&gt;解决方案&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;缓存击穿
    &lt;ul&gt;
      &lt;li&gt;问题描述&lt;/li&gt;
      &lt;li&gt;解决方案&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;缓存雪崩
    &lt;ul&gt;
      &lt;li&gt;问题描述&lt;/li&gt;
      &lt;li&gt;解决方案
        &lt;h2 id=&quot;redis-持久化方案&quot;&gt;Redis 持久化方案&lt;/h2&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;RDB&lt;/li&gt;
  &lt;li&gt;AOF&lt;/li&gt;
  &lt;li&gt;RDB+AOF
```
    &lt;h1 id=&quot;1-rdb-配置---根据你的数据重要性和写入频繁程度调整&quot;&gt;1. RDB 配置 - 根据你的数据重要性和写入频繁程度调整&lt;/h1&gt;
    &lt;p&gt;save 900 1                      # 900秒（15分钟）内至少1个key发生变化
save 300 10                     # 300秒（5分钟）内至少10个key发生变化
save 60 10000                   # 60秒内至少10000个key发生变化
dbfilename dump.rdb             # RDB 文件名
rdbcompression yes               # 开启RDB文件压缩，节省空间
rdbchecksum yes                 # 开启RDB文件校验，保证数据完整性
stop-writes-on-bgsave-error yes # 后台保存出错时停止写入，防止数据不一致&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;2-aof-配置---混合持久化的基础必须开启&quot;&gt;2. AOF 配置 - 混合持久化的基础，必须开启&lt;/h1&gt;
&lt;p&gt;appendonly yes                  # 启用AOF持久化
appendfilename “appendonly.aof” # AOF文件名
appendfsync everysec            # 每秒同步，性能与安全的良好平衡&lt;/p&gt;

&lt;h1 id=&quot;3-aof-重写配置---防止aof文件无限膨胀&quot;&gt;3. AOF 重写配置 - 防止AOF文件无限膨胀&lt;/h1&gt;
&lt;p&gt;auto-aof-rewrite-percentage 100  # 当前AOF文件比上次重写后大小增长100%时触发
auto-aof-rewrite-min-size 64mb   # AOF文件最小达到64MB才触发重写&lt;/p&gt;

&lt;h1 id=&quot;4-启用混合持久化-redis-40&quot;&gt;4. 启用混合持久化 (Redis 4.0+)&lt;/h1&gt;
&lt;p&gt;aof-use-rdb-preamble yes&lt;/p&gt;

&lt;h1 id=&quot;5-通用配置&quot;&gt;5. 通用配置&lt;/h1&gt;
&lt;p&gt;dir /path/to/your/redis/data    # 设置持久化文件存储目录，确保磁盘空间充足
```&lt;/p&gt;
&lt;h2 id=&quot;redis高可用方案&quot;&gt;Redis高可用方案&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;主从
1台主、1台从&lt;/li&gt;
  &lt;li&gt;哨兵模式
1台主、2台从、3台哨兵(部署到每台主从)&lt;/li&gt;
  &lt;li&gt;集群模式
3太主、3台从&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Zhao Q.H.</name></author><category term="Redis" /><summary type="html">Redis高频面试题 缓存穿透 问题描述 解决方案 缓存击穿 问题描述 解决方案 缓存雪崩 问题描述 解决方案 Redis 持久化方案 RDB AOF RDB+AOF ``` 1. RDB 配置 - 根据你的数据重要性和写入频繁程度调整 save 900 1 # 900秒（15分钟）内至少1个key发生变化 save 300 10 # 300秒（5分钟）内至少10个key发生变化 save 60 10000 # 60秒内至少10000个key发生变化 dbfilename dump.rdb # RDB 文件名 rdbcompression yes # 开启RDB文件压缩，节省空间 rdbchecksum yes # 开启RDB文件校验，保证数据完整性 stop-writes-on-bgsave-error yes # 后台保存出错时停止写入，防止数据不一致</summary></entry><entry><title type="html">VSCode如何配置go开发环境</title><link href="http://localhost:4000/go/2025/08/01/go-dev-env/" rel="alternate" type="text/html" title="VSCode如何配置go开发环境" /><published>2025-08-01T00:00:00+08:00</published><updated>2025-08-01T00:00:00+08:00</updated><id>http://localhost:4000/go/2025/08/01/go-dev-env</id><content type="html" xml:base="http://localhost:4000/go/2025/08/01/go-dev-env/">&lt;p&gt;vscode配置Go开发环境&lt;/p&gt;
&lt;h2 id=&quot;检查go是否安装&quot;&gt;检查Go是否安装&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash-3.2$ go version
go version go1.24.1 darwin/amd64
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;vscode安装go相关开发调试的工具&quot;&gt;VSCode安装Go相关开发调试的工具&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Command/Ctrl+Shift+P快捷键弹出命令面板窗口
选择=》Go:Install/Update Tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/go/go-tools.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;检查go开发调试相关工具安装是否成功&quot;&gt;检查Go开发调试相关工具安装是否成功&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash-3.2$ go env|grep -E &quot;GOPATH&quot;
GOPATH='/Users/zhaoqhu/go'
bash-3.2$ ls -alt /Users/zhaoqhu/go/bin/
total 243744
-rwxr-xr-x   1 zhaoqhu  staff  15396912  8  1 16:43 staticcheck
-rwxr-xr-x   1 zhaoqhu  staff  21008256  8  1 16:43 dlv
-rwxr-xr-x   1 zhaoqhu  staff   8835376  8  1 16:42 goplay
-rwxr-xr-x   1 zhaoqhu  staff   7168976  8  1 16:42 impl
-rwxr-xr-x   1 zhaoqhu  staff  13199952  8  1 16:42 gotests
drwxr-xr-x   6 zhaoqhu  staff       192  8  1 14:56 ..
drwxr-xr-x  10 zhaoqhu  staff       320  7 22 16:30 .
-rwxr-xr-x   1 zhaoqhu  staff  18287600  7 12 13:16 godoc
-rwxr-xr-x   1 zhaoqhu  staff   4149888  3 26 13:49 gomodifytags
-rwxr-xr-x   1 zhaoqhu  staff  36730976  3 26 13:49 gopls
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;安装go扩展&quot;&gt;安装Go扩展&lt;/h2&gt;
&lt;p&gt;Command/Ctrl+Shift+X快捷键，打开扩展商店&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/go/go-ext.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;运行和调试&quot;&gt;运行和调试&lt;/h2&gt;

&lt;p&gt;创建launch.json文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    // 使用 IntelliSense 了解相关属性。 
    // 悬停以查看现有属性的描述。
    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387
    &quot;version&quot;: &quot;0.2.0&quot;,
    &quot;configurations&quot;: [
    {
        &quot;name&quot;: &quot;Launch Package&quot;,
        &quot;type&quot;: &quot;go&quot;,
        &quot;request&quot;: &quot;launch&quot;,
        &quot;mode&quot;: &quot;auto&quot;,
        &quot;program&quot;: &quot;${workspaceFolder}&quot;
    },
    {
        &quot;name&quot;: &quot;Launch Package test&quot;,
        &quot;type&quot;: &quot;go&quot;,
        &quot;request&quot;: &quot;launch&quot;,
        &quot;mode&quot;: &quot;auto&quot;,
        &quot;program&quot;: &quot;${workspaceFolder}/test&quot;
    },
    {
        &quot;name&quot;: &quot;Launch Package chapter1&quot;,
        &quot;type&quot;: &quot;go&quot;,
        &quot;request&quot;: &quot;launch&quot;,
        &quot;mode&quot;: &quot;auto&quot;,
        &quot;program&quot;: &quot;${workspaceFolder}/chapter1/channels&quot;
    },
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/go/go-debug.png&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;验证调试&quot;&gt;验证调试&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash-3.2$ curl http://127.0.0.1:8080/ping
{&quot;message&quot;:&quot;pong&quot;}
bash-3.2$ curl http://127.0.0.1:8080/hello
{&quot;msg&quot;:&quot;hello&quot;}
bash-3.2$ 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;/assets/images/go/go-debug-ping.png&quot; /&gt;&lt;/p&gt;</content><author><name>Zhao Q.H.</name></author><category term="Go" /><summary type="html">vscode配置Go开发环境 检查Go是否安装 bash-3.2$ go version go version go1.24.1 darwin/amd64 VSCode安装Go相关开发调试的工具 Command/Ctrl+Shift+P快捷键弹出命令面板窗口 选择=》Go:Install/Update Tools</summary></entry><entry><title type="html">Php Config</title><link href="http://localhost:4000/2024/03/10/php-config/" rel="alternate" type="text/html" title="Php Config" /><published>2024-03-10T00:00:00+08:00</published><updated>2024-03-10T00:00:00+08:00</updated><id>http://localhost:4000/2024/03/10/php-config</id><content type="html" xml:base="http://localhost:4000/2024/03/10/php-config/">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure  --prefix=/usr/local/php7-15 --enable-opcache --with-config-file-path=/usr/local/php7-15/etc --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --enable-fpm --enable-fastcgi --enable-static --enable-inline-optimization --enable-sockets --enable-wddx --enable-zip --enable-calendar --enable-bcmath --enable-soap --with-zlib --with-iconv=/usr/local --with-gd --with-xmlrpc --enable-mbstring --without-sqlite --with-curl --enable-ftp --with-freetype-dir=/usr/local/Cellar/freetype/2.12.1 --with-jpeg-dir=/usr/local/Cellar/jpeg-turbo/2.1.4 --with-webp-dir=/usr/local/Cellar/webp/1.2.4 --with-xpm-dir=/usr/local/Cellar/libxpm/3.5.14 --with-png-dir=/usr/local/Cellar/libpng/1.6.39 --with-zlib-dir=/usr/local/Cellar/zlib/1.2.13 --with-iconv=/usr/local/Cellar/libiconv/1.17 --disable-ipv6 --disable-debug --disable-maintainer-zts --disable-safe-mode --disable-fileinfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;chmod -R 7777 ./index.html ./caches ./html ./uploadfile ./phpsso_server/caches ./phpsso_server/uploadfile&lt;/p&gt;

&lt;h1 id=&quot;cd-homezhaoqhuphp-src&quot;&gt;cd /home/zhaoqhu/php-src&lt;/h1&gt;
&lt;p&gt;wget https://www.php.net/distributions/php-7.4.16.tar.gz&lt;/p&gt;
&lt;h1 id=&quot;tar--zxvf-php-7416targz&quot;&gt;tar -zxvf ./php-7.4.16.tar.gz&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PKG_CONFIG_PATH=&quot;/usr/local/opt/libedit/lib/pkgconfig&quot;
export PKG_CONFIG_PATH=&quot;/usr/local/opt/libsodium/lib/pkgconfig&quot;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;./configure \
–with-iconv=/usr/local/opt/libiconv \
–enable-fpm \
–prefix=/usr/local/php7-416 \
–with-config-file-path=/usr/local/php7-416/etc \
–with-config-file-scan-dir=/usr/local/php7-416/etc/conf.d \
–enable-option-checking=fatal \
–with-mhash \
–with-pic \
–enable-ftp \
–enable-mbstring \
–enable-mysqlnd \
–with-password-argon2 \
–with-sodium \
–with-curl \
–with-libedit \
–with-openssl \
–with-zlib \
–with-pear \
–with-fpm-user=www-data \
–with-fpm-group=www-data \
–disable-cgi \&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;

# 扩展安装
## apcu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/usr/local/php7-416/bin/php
/usr/local/php7-416/sbin/php-fpm
./pecl install apcu
sh-3.2# ../../php7-416/bin/pecl install apcu&lt;/p&gt;

&lt;p&gt;../../php7-416/bin/pecl install https://pecl.php.net/get/apcu-5.1.22.tgz&lt;/p&gt;

&lt;p&gt;cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-apcu.ini ./&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## bcmath

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config
make
make install
cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-bcmath.ini ./
killall -9 php-fpm&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## exif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config
make &amp;amp;&amp;amp; make install
sh-3.2# cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-exif.ini ./
sh-3.2# killall -9 php-fpm
sh-3.2# /usr/local/php7-416/sbin/php-fpm&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
## gd

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;cd ext/gd/
/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config –with-freetype
make &amp;amp;&amp;amp; make install
cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-gd.ini ./&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
## gmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;cd ext/gmp/
/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config
checking for __gmpz_rootrem in -lgmp… no
configure: error: GNU MP Library version 4.2 or greater required.&lt;/p&gt;
&lt;h1 id=&quot;brew-install-gmp&quot;&gt;brew install gmp&lt;/h1&gt;
&lt;p&gt;make &amp;amp;&amp;amp; make install
sh-3.2# cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-gmp.ini ./
sh-3.2# killall -9 php-fpm
sh-3.2# /usr/local/php7-416/sbin/php-fpm&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## imageick
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;https://pecl.php.net/get/imagick-3.7.0.tgz
sh-3.2# pwd
/usr/local/php-src-7.4.16/pecl-src
sh-3.2# cp ~zhaoqinghu/Downloads/imagick-3.7.0.tgz ./
sh-3.2# /usr/local/php7-416/bin/pecl install imagick-3.7.0.tgz 
33 source files, building
configure: error: not found. Please provide a path to MagickWand-config or Wand-config program.
ERROR: `/private/var/tmp/pear/temp/imagick/configure –with-php-config=/usr/local/php7-416/bin/php-config –with-imagick’ failed&lt;/p&gt;

&lt;p&gt;brew install imagemagick
sh-3.2# cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-imagick.ini ./
sh-3.2# killall -9 php-fpm
sh-3.2# /usr/local/php7-416/sbin/php-fpm&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## intl
安装失败
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;cd intl&lt;/p&gt;

&lt;p&gt;/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config
checking for icu-uc &amp;gt;= 50.1 icu-io icu-i18n… no
configure: error: Package requirements (icu-uc &amp;gt;= 50.1 icu-io icu-i18n) were not met:&lt;/p&gt;
&lt;h1 id=&quot;export-pkg_config_pathpkg_config_pathusrlocalopticu4clibpkgconfig&quot;&gt;export PKG_CONFIG_PATH=”$PKG_CONFIG_PATH:/usr/local/opt/icu4c/lib/pkgconfig”&lt;/h1&gt;
&lt;p&gt;./configure   –with-php-config=/usr/local/php7-416/bin/php-config
make &amp;amp;&amp;amp; make install&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## ldap
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config –with-ldap=/usr/local/opt/openldap&lt;/p&gt;
&lt;h1 id=&quot;brew-install-openldap&quot;&gt;brew install openldap&lt;/h1&gt;

&lt;h1 id=&quot;export-pkg_config_pathpkg_config_pathusrlocaloptopenldaplibpkgconfig&quot;&gt;export PKG_CONFIG_PATH=”$PKG_CONFIG_PATH:/usr/local/opt/openldap/lib/pkgconfig”&lt;/h1&gt;
&lt;p&gt;export LDFLAGS=”-L/usr/local/opt/openldap/lib”
export CPPFLAGS=”-I/usr/local/opt/openldap/include”
sh-3.2# cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-ldap.ini ./
sh-3.2# killall -9 php-fpm
sh-3.2# /usr/local/php7-416/sbin/php-fpm&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## memcached
安装错误
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;https://pecl.php.net/get/memcached-3.2.0.tgz
cp ~zhaoqinghu/Downloads/memcached-3.2.0.tgz ./
-3.2# cp ~zhaoqinghu/Downloads/memcached-3.2.0.tgz ./
sh-3.2# /usr/local/php7-416/bin/pecl install memcached-3.2.0.tgz&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## opcache
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config
make &amp;amp;&amp;amp; make install
cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-opcache.ini ./
killall -9 php-fpm
/usr/local/php7-416/sbin/php-fpm&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## pcntl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config
make &amp;amp;&amp;amp; make install
sh-3.2# cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-pcntl.ini ./
sh-3.2# killall -9 php-fpm
sh-3.2# /usr/local/php7-416/sbin/php-fpm&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## pdo_mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config
make &amp;amp;&amp;amp; make install&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## pdo_pgsql
暂时不安装
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## redis
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;https://pecl.php.net/get/redis-5.3.7.tgz
sh-3.2# cp ~zhaoqinghu/Downloads/redis-5.3.7.tgz ./
sh-3.2# /usr/local/php7-416/bin/pecl install redis-5.3.7.tgz 
31 source files, building
sh-3.2# cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-redis.ini ./
sh-3.2# killall -9 php-fpm
sh-3.2# /usr/local/php7-416/sbin/php-fpm
sh-3.2#&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## sodium
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config
make &amp;amp;&amp;amp; make install&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;brew install libzip
zhaoqinghu@zhaoqinghudeMacBook-Pro no-debug-non-zts-20190902 % chmod -R 777 /usr/local/lib/cmake 
chmod: Unable to change file mode on /usr/local/lib/cmake: Operation not permitted
chmod: Unable to change file mode on /usr/local/lib/cmake/libxml2: Operation not permitted
chmod: Unable to change file mode on /usr/local/lib/cmake/libxml2/libxml2-config.cmake: Operation not permitted
zhaoqinghu@zhaoqinghudeMacBook-Pro no-debug-non-zts-20190902 % sudo chmod -R 777 /usr/local/lib/cmake
zhaoqinghu@zhaoqinghudeMacBook-Pro no-debug-non-zts-20190902 %  brew link libzip                   &lt;br /&gt;
Linking /usr/local/Cellar/libzip/1.9.2… 135 symlinks created.&lt;/p&gt;

&lt;p&gt;/usr/local/php7-416/bin/phpize
./configure   –with-php-config=/usr/local/php7-416/bin/php-config
make &amp;amp;&amp;amp; make install&lt;/p&gt;

&lt;p&gt;sh-3.2# cp ~zhaoqinghu/Desktop/83-2000/etc/php/conf.d/docker-php-ext-zip.ini ./
sh-3.2# killall -9 php-fpm
sh-3.2# /usr/local/php7-416/sbin/php-fpm&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
## mysqli
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;cd mysqli/
 /usr/local/php7-416/bin/phpize
 ./configure   –with-php-config=/usr/local/php7-416/bin/php-config 
 make &amp;amp;&amp;amp; make install&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## xdebug
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;sh-3.2# /usr/local/php7-416/bin/pecl install xdebug-3.2.0.tgz 
pecl/xdebug requires PHP (version &amp;gt;= 8.0.0, version &amp;lt;= 8.2.99), installed version is 7.4.16
No valid packages found
install failed
sh-3.2# cp ~zhaoqinghu/Downloads/xdebug-3.1.5.tgz ./
sh-3.2# /usr/local/php7-416/bin/pecl install xdebug-3.1.5.tgz 
93 source files, building
running: phpize
Configuring for:
PHP Api Version:         20190902
Zend Module Api No:      20190902
Zend Extension Api No:   320190902
sh-3.2# cat docker-php-ext-xdebug.ini 
zend_extension=xdebug
xdebug.remote_handler = dbgp
xdebug.remote_connect_back = 0
xdebug.idekey = docker
xdebug.mode = debug
xdebug.start_with_request = yes
xdebug.client_port = 9003
xdebug.client_host = 127.0.0.1
xdebug.log = /tmp/xdebug.log
```&lt;/p&gt;

&lt;p&gt;参考资料
&lt;a href=&quot;https://blog.csdn.net/ligaofeng/article/details/105819374&quot;&gt;https://blog.csdn.net/ligaofeng/article/details/105819374&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.liuvv.com/p/ad42ac48.html&quot;&gt;https://www.liuvv.com/p/ad42ac48.html&lt;/a&gt;
&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/&lt;/a&gt;
&lt;a href=&quot;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/icu4c-71.1.big_sur.bottle.tar.gz&quot;&gt;https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles/icu4c-71.1.big_sur.bottle.tar.gz&lt;/a&gt;&lt;/p&gt;</content><author><name>Zhao Q.H.</name></author><summary type="html">./configure --prefix=/usr/local/php7-15 --enable-opcache --with-config-file-path=/usr/local/php7-15/etc --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --enable-fpm --enable-fastcgi --enable-static --enable-inline-optimization --enable-sockets --enable-wddx --enable-zip --enable-calendar --enable-bcmath --enable-soap --with-zlib --with-iconv=/usr/local --with-gd --with-xmlrpc --enable-mbstring --without-sqlite --with-curl --enable-ftp --with-freetype-dir=/usr/local/Cellar/freetype/2.12.1 --with-jpeg-dir=/usr/local/Cellar/jpeg-turbo/2.1.4 --with-webp-dir=/usr/local/Cellar/webp/1.2.4 --with-xpm-dir=/usr/local/Cellar/libxpm/3.5.14 --with-png-dir=/usr/local/Cellar/libpng/1.6.39 --with-zlib-dir=/usr/local/Cellar/zlib/1.2.13 --with-iconv=/usr/local/Cellar/libiconv/1.17 --disable-ipv6 --disable-debug --disable-maintainer-zts --disable-safe-mode --disable-fileinfo</summary></entry><entry><title type="html">Php High Level</title><link href="http://localhost:4000/2024/03/10/php-high-level/" rel="alternate" type="text/html" title="Php High Level" /><published>2024-03-10T00:00:00+08:00</published><updated>2024-03-10T00:00:00+08:00</updated><id>http://localhost:4000/2024/03/10/php-high-level</id><content type="html" xml:base="http://localhost:4000/2024/03/10/php-high-level/">&lt;h1 id=&quot;分布式事务最大努力通知案例分析&quot;&gt;分布式事务最大努力通知案例分析&lt;/h1&gt;

&lt;p&gt;在第三方支付中，例如支付宝，或者微信，对于订单请求，第三方支付系统采用的是消息同步返回，异步通知+主动补偿查询的补偿机制。&lt;/p&gt;

&lt;p&gt;由于互联网通信的不可靠性，例如网络故障、服务器故障、应用bug等因素的影响，不管是同步返回、异步通知、主动查询报文都可能出现超时无响应、报文丢失等情况，所以像支付业务、对结果的通知、一般采用几种方案结合的补偿机制，不能完全依赖某一种机制。&lt;/p&gt;

&lt;p&gt;例如一个支付结果的通知，一方面会在支付页面跳转时候返回支付结果（一般只用作前端展示使用，非最终状态），同时会采用后台异步通知机制（有前台、后台通知的，以后台异步通知结果为准），但由于前台跳转、后台结果通知可能失效，因此还以定时补单+请求方主动查询接口作为辅助手段。&lt;/p&gt;

&lt;p&gt;常见的补单操作，任务调度策略一般设定30秒、60秒、3分钟、6分钟、10分钟调度多次（以自己业务需要），如果调度接受到响应确认报文，补单成功。则终止对应订单的调度任务；如果超过补单上限次数，则停止补单，避免无谓的资源浪费。请求端随时可以发起请求报文查询对应订单的状态。&lt;/p&gt;

&lt;p&gt;## 最大努力通知型&lt;/p&gt;

&lt;p&gt;### 实现
  1、业务活动的主动方，在完成业务处理之后，向业务活动的被动房发送消息，被动方需主动响应正确消息，否则根据定时策略，最大努力通知。
  2、业务活动的被动方（电商平台）也可以向业务活动主动方（支付宝平台）查询，恢复丢失的业务消息。
  ### 约束
  被动方的处理结果不能影响主动方的处理结果
  ### 成本
  业务查询与校对系统的建设成本
  ### 使用范围
  对业务最终一致性的时间敏感度低
  跨企业的业务活动
  ### 方案特点
  业务活动的主动方在完成业务处理后，向业务活动被动方发送通知消息（允许消息丢失）
  主动方可以设置时间阶梯通知规则，在通知失败后按规则重复通知，直到通知N次后，主动方提供校队查询接口给被动方按需校队查询，用于恢复丢失的业务消息
  ### 应用案例
  银行通知、商户通知等（各大交易业务平台间的商户通知：多次通知、查询校对、对账文件）&lt;/p&gt;

&lt;p&gt;## 了解docker并且快速配置RabbitMQ&lt;/p&gt;

&lt;p&gt;### Docker是什么？
  Docker是一个开源的应用容器引擎，你可以将其理解为一个轻量级的虚拟机，开发者可以打包他们的应用以及依赖包到一个可移植的容器中，然后发布到任何流行的Linux机器上，只要有了Docker，用户便不在需要为这些应用配置其所需的特有环境了，也不需要为这些应用统一环境了
  ### 为什么要使用Docker，Docker的好处是什么？
  可以认为Docker是一个通用安装程序，简单来说，利用Docker容器，可以将任何一个或者多个程序封装起来，并提供标准的管理接口，因为使用了容器，所以可以很方便的把生产环境和开发环境分开，互不影响，这样，开发人员负责维护内容，并使用Docker进行封装，系统管理人员利用Docker的标准接口进行部署和管理。&lt;/p&gt;

&lt;p&gt;Docker的主要用途，目前有三大类。
  1）提供一致性的环境。比如，本地测试他人的软件、持续集成的时候提供单元测试和构建环境。
  2）提供弹性的云服务。因为Docker容器可以随开随关，很适合动态扩容和缩容。
  3）组件微服务架构，通过多个容器，一台机器可以跑多个服务，因此在本机就可以模拟出微服务架构。&lt;/p&gt;

&lt;p&gt;### 一、Docker安装 
  CentOS
  1、更新update到最新的版本
  yum update
  2、安装docker
  yum -y install docker
  3、启动docker
  systemctl start docker
  4、加入开启自启
  systemctl enable docker&lt;/p&gt;

&lt;p&gt;### 二、Docker参数说明
  启动会自动搜索 rabbitMQ&lt;/p&gt;</content><author><name>Zhao Q.H.</name></author><summary type="html">分布式事务最大努力通知案例分析</summary></entry><entry><title type="html">Rabbitmq</title><link href="http://localhost:4000/2022/12/06/rabbitmq/" rel="alternate" type="text/html" title="Rabbitmq" /><published>2022-12-06T00:00:00+08:00</published><updated>2022-12-06T00:00:00+08:00</updated><id>http://localhost:4000/2022/12/06/rabbitmq</id><content type="html" xml:base="http://localhost:4000/2022/12/06/rabbitmq/">&lt;h1 id=&quot;mac安装rabbitmq&quot;&gt;Mac安装rabbitmq&lt;/h1&gt;
&lt;p&gt;使用homebrew安装&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew update
brew install rabbitmq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;启动rabbitmq服务&quot;&gt;启动rabbitmq服务&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% pwd
/usr/local/Cellar/rabbitmq/3.11.4/sbin
% ls
rabbitmq-defaults	rabbitmq-queues		rabbitmq-upgrade
rabbitmq-diagnostics	rabbitmq-server		rabbitmqadmin
rabbitmq-env		rabbitmq-streams	rabbitmqctl
rabbitmq-plugins	rabbitmq-tanzu
% /usr/local/Cellar/rabbitmq/3.11.4/sbin/rabbitmq-server # 启动服务
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;启动management-插件网页管理器&quot;&gt;启动management 插件网页管理器&lt;/h1&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;% /usr/local/Cellar/rabbitmq/3.11.4/sbin/rabbitmq-plugins enable rabbitmq_management
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;访问management&quot;&gt;访问Management&lt;/h1&gt;
&lt;p&gt;http://localhost:15672/
默认账号:guest
默认密码:guest&lt;/p&gt;

&lt;h1 id=&quot;php安装amqp扩展&quot;&gt;php安装amqp扩展&lt;/h1&gt;
&lt;p&gt;amqp扩展依赖&lt;a href=&quot;https://formulae.brew.sh/formula/rabbitmq-c#default&quot;&gt;rabbitmq-c&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;homebrew安装rabbitmq-c&quot;&gt;homebrew安装rabbitmq-c&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install rabbitmq-c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;由于国内网络原因，使用pecl在线安装可能会失败，如果失败可以先将安装包现在到本地，然后在使用本地的安装包下载&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -O https://pecl.php.net/get/amqp-1.11.0.tgz
% pwd
/usr/local/php7-15/bin
% ./pecl install /Users/zhaoqinghu/Downloads/amqp-1.11.0.tgz
% Set the path to librabbitmq install prefix [autodetect] : /usr/local/Cellar/rabbitmq-c/0.11.0 #输入rabbitmq-c的安装位置
Installing '/usr/local/php7-15/lib/php/extensions/no-debug-non-zts-20160303/amqp.so'
install ok: channel://pecl.php.net/amqp-1.11.0
configuration option &quot;php_ini&quot; is not set to php.ini location
You should add &quot;extension=amqp.so&quot; to php.ini
sh-3.2#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;参考资料&quot;&gt;参考资料&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.rabbitmq.com/install-homebrew.html&quot;&gt;https://www.rabbitmq.com/install-homebrew.html&lt;/a&gt;
&lt;a href=&quot;https://formulae.brew.sh/formula/rabbitmq#default&quot;&gt;https://formulae.brew.sh/formula/rabbitmq#default&lt;/a&gt;&lt;/p&gt;</content><author><name>Zhao Q.H.</name></author><summary type="html">Mac安装rabbitmq 使用homebrew安装 brew update brew install rabbitmq 启动rabbitmq服务 % pwd /usr/local/Cellar/rabbitmq/3.11.4/sbin % ls rabbitmq-defaults rabbitmq-queues rabbitmq-upgrade rabbitmq-diagnostics rabbitmq-server rabbitmqadmin rabbitmq-env rabbitmq-streams rabbitmqctl rabbitmq-plugins rabbitmq-tanzu % /usr/local/Cellar/rabbitmq/3.11.4/sbin/rabbitmq-server # 启动服务</summary></entry><entry><title type="html">mysql启动</title><link href="http://localhost:4000/2021/11/14/mysql-init/" rel="alternate" type="text/html" title="mysql启动" /><published>2021-11-14T00:00:00+08:00</published><updated>2021-11-14T00:00:00+08:00</updated><id>http://localhost:4000/2021/11/14/mysql-init</id><content type="html" xml:base="http://localhost:4000/2021/11/14/mysql-init/">&lt;h1 id=&quot;查看mysql配置文件&quot;&gt;查看mysql配置文件&lt;/h1&gt;
&lt;p&gt;/usr/local/Cellar/mysql/5.6.23/bin/mysql&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;/usr/local/Cellar/mysql/5.6.23/bin/mysql –help&lt;/td&gt;
      &lt;td&gt;grep ‘my.cnf’&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;cat /usr/local/etc/my.cnf;&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;ps aux&lt;/td&gt;
      &lt;td&gt;grep mysql&lt;/td&gt;
      &lt;td&gt;grep ‘my.cnf’&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;</content><author><name>Zhao Q.H.</name></author><summary type="html">查看mysql配置文件 /usr/local/Cellar/mysql/5.6.23/bin/mysql</summary></entry><entry><title type="html">php使用kafka</title><link href="http://localhost:4000/php/2021/09/12/php-kafka/" rel="alternate" type="text/html" title="php使用kafka" /><published>2021-09-12T00:00:00+08:00</published><updated>2021-09-12T00:00:00+08:00</updated><id>http://localhost:4000/php/2021/09/12/php-kafka</id><content type="html" xml:base="http://localhost:4000/php/2021/09/12/php-kafka/">&lt;ul&gt;
  &lt;li&gt;kafka基础架构和消息队列原理剖析&lt;/li&gt;
  &lt;li&gt;生产者与消费者模式原理解读&lt;/li&gt;
  &lt;li&gt;kafka flollwer如何与leader同步数据？&lt;/li&gt;
  &lt;li&gt;如何保证消息的幂等性、确认消费，避免重复消费&lt;/li&gt;
  &lt;li&gt;kafka的确认机制是如何保证的&lt;/li&gt;
  &lt;li&gt;必备kafka高可用集群搭建方案&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;zookeeper-server&quot;&gt;zookeeper Server&lt;/h1&gt;
&lt;h1 id=&quot;kafka&quot;&gt;kafka&lt;/h1&gt;

&lt;h1 id=&quot;队列&quot;&gt;队列&lt;/h1&gt;

&lt;h2 id=&quot;使用场景&quot;&gt;使用场景&lt;/h2&gt;
&lt;p&gt;京东618，秒杀场景。&lt;/p&gt;

&lt;h2 id=&quot;队列的作用&quot;&gt;队列的作用&lt;/h2&gt;
&lt;p&gt;解耦系统，异步，限流，消峰。&lt;/p&gt;

&lt;p&gt;服务器的性能，10w qps&lt;/p&gt;

&lt;p&gt;618活动时达到，200w qps&lt;/p&gt;

&lt;p&gt;使用队列把200w qps，分解到10w qps，保障系统正常的使用。&lt;/p&gt;

&lt;h3 id=&quot;异步&quot;&gt;异步&lt;/h3&gt;

&lt;h1 id=&quot;生产者与消费者模式原理解读&quot;&gt;生产者与消费者模式原理解读&lt;/h1&gt;

&lt;p&gt;zookeeper 负责管理kafka集群，比如kafka1挂掉，zookeeper负责自动链接到kafka2&lt;/p&gt;

&lt;p&gt;kafka的数据通过zookeeper&lt;/p&gt;

&lt;p&gt;kafka 1&lt;/p&gt;

&lt;p&gt;kafka 2&lt;/p&gt;

&lt;p&gt;kafka 3&lt;/p&gt;

&lt;h1 id=&quot;消息被确认消费&quot;&gt;消息被确认消费？&lt;/h1&gt;

&lt;h2 id=&quot;redis-队列-中小型&quot;&gt;Redis 队列 中小型&lt;/h2&gt;
&lt;p&gt;没有持久化的内容 
性能支持每秒10万级别吞吐量没问题。&lt;/p&gt;

&lt;h2 id=&quot;kafka-大型的系统&quot;&gt;kafka 大型的系统&lt;/h2&gt;
&lt;p&gt;每秒25万级别的吞吐量
批量读写
MMAP 内存映射&lt;/p&gt;

&lt;h1 id=&quot;php-使用kafka&quot;&gt;php 使用kafka&lt;/h1&gt;
&lt;p&gt;composer kafka&lt;/p&gt;

&lt;p&gt;composer require nmred/kafka-php&lt;/p&gt;

&lt;p&gt;use Kafka&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class KafkaController extends Controller
{
    public function Producer(){
        //任务 消息内容. ---&amp;gt;3000 小猪的详细信息 订单信息
        $value = 'winner 的kafka';
        //主题
        $topic = 'order1';
        $config = Kafka\ProducerConfig::getInstance();
        $config-&amp;gt;setMetadataRefreshIntervalMs(metadataRefreshIntervalMs:10000);
        $config-&amp;gt;setMetadataBrokerList(list:'localhost:9092');
        $config-&amp;gt;setBrokerVersion(version:'1.0.0');
        //消息可靠
        //当ack模式为1时，服务端的消息会持久化发送到主副本leader
        //ack模式为0时，不会等待消息的持久化到主副本。
        //ack模式为2时，
        //可靠性:2&amp;gt;1&amp;gt;0
        //性能:0&amp;gt;1&amp;gt;2
        $config-&amp;gt;setRequiredAck(requiredAck:'1');
        //客户端生产消息的模式
        //同步
        //异步
        //发后即忘
        //性能：异步&amp;gt;同步&amp;gt;发后即忘
        $config-&amp;gt;setIsAsyn(asyn:false);
        $config-&amp;gt;setProduceInterval(produceInterval:500);
        $producer = new Kafka\Prodecer(function() use($value,$topic){
            return [
                [
                    'topic'=&amp;gt;$topic,
                    'value'=&amp;gt;$value,
                    'key =&amp;gt; '',
                ]
            ];
        });
        dump($producer);
        $producer-&amp;gt;success(function($result){
            dump($result);
        });
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;消费者&quot;&gt;消费者&lt;/h1&gt;

&lt;p&gt;高级 如何保证消息可靠消费？&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;消息不能够被丢失，消息存在。
 生产者：ACK机制使用默认值1
 消费者：确认消费&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;序列器 
1次
2次
3次&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public function handle(){
    $config = Kafka\ConsumerConfig::getInstance();
    $config-&amp;gt;setMetadataRefreshInstervalMs(metadataRefreshIntervalMs:500);
    $config-&amp;gt;setMetadataBrokerList(list:'localhost:9092');
    //组
    $config-&amp;gt;setGroupId(groupId:'test1');
    $config-&amp;gt;setBrokerVersion(version:'1.0.0');
    $config-&amp;gt;setTopics(['order1']);
    //$config-&amp;gt;setOffsetReset('earliest);
    $consumer = new Kafka\Consumer();
    $consumer-&amp;gt;start(function($topic,$part,$message){
        var_dump($topic);
        var_dump($part);
        var_dump($message);
    });
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;子副本&quot;&gt;子副本&lt;/h1&gt;

&lt;h1 id=&quot;消息&quot;&gt;消息&lt;/h1&gt;
&lt;p&gt;数据库里的一行数据&lt;/p&gt;
&lt;h1 id=&quot;生产者&quot;&gt;生产者&lt;/h1&gt;
&lt;p&gt;发布消息的程序
主题
分区
指定分区
不指定分区
键
一个标记
值&lt;/p&gt;

&lt;h1 id=&quot;消费者-1&quot;&gt;消费者&lt;/h1&gt;
&lt;p&gt;订阅消息的程序&lt;/p&gt;

&lt;p&gt;偏移量
消费者根据偏移量读取数据&lt;/p&gt;

&lt;p&gt;broker1
主题:圆蛋蛋
分区0
主题:圆蛋蛋
分区1&lt;/p&gt;</content><author><name>Zhao Q.H.</name></author><category term="PHP" /><summary type="html">kafka基础架构和消息队列原理剖析 生产者与消费者模式原理解读 kafka flollwer如何与leader同步数据？ 如何保证消息的幂等性、确认消费，避免重复消费 kafka的确认机制是如何保证的 必备kafka高可用集群搭建方案</summary></entry><entry><title type="html">Mac系统查看隐藏文件</title><link href="http://localhost:4000/mac/2021/09/12/mac-01/" rel="alternate" type="text/html" title="Mac系统查看隐藏文件" /><published>2021-09-12T00:00:00+08:00</published><updated>2021-09-12T00:00:00+08:00</updated><id>http://localhost:4000/mac/2021/09/12/mac-01</id><content type="html" xml:base="http://localhost:4000/mac/2021/09/12/mac-01/">&lt;p&gt;在mac系统下，默认看不到隐藏的目录，比如.git目录，通过下面的方法可以切换是否显示。&lt;/p&gt;

&lt;h1 id=&quot;使用快捷键&quot;&gt;使用快捷键&lt;/h1&gt;
&lt;p&gt;Shift+Command+.
同时按下Shift和Command和.三个键切换显示状态。&lt;/p&gt;
&lt;h1 id=&quot;使用命令行&quot;&gt;使用命令行&lt;/h1&gt;
&lt;h2 id=&quot;显示&quot;&gt;显示&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.finder AppleShowAllFiles TRUE

killall Finder

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;隐藏&quot;&gt;隐藏&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.finder AppleShowAllFiles FALSE

killall Finder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Zhao Q.H.</name></author><category term="Mac" /><summary type="html">在mac系统下，默认看不到隐藏的目录，比如.git目录，通过下面的方法可以切换是否显示。</summary></entry><entry><title type="html">vscode 使用xdebug3.0.4调试</title><link href="http://localhost:4000/2021/07/10/vscode-xdebug/" rel="alternate" type="text/html" title="vscode 使用xdebug3.0.4调试" /><published>2021-07-10T00:00:00+08:00</published><updated>2021-07-10T00:00:00+08:00</updated><id>http://localhost:4000/2021/07/10/vscode-xdebug</id><content type="html" xml:base="http://localhost:4000/2021/07/10/vscode-xdebug/">&lt;h1 id=&quot;vscode-安装-php-debug-扩展&quot;&gt;vscode 安装 PHP Debug 扩展&lt;/h1&gt;
&lt;p&gt;左侧菜单栏扩展图标=&amp;gt;搜索输入框=&amp;gt;php debug=&amp;gt;点击安装&lt;/p&gt;
&lt;h1 id=&quot;vscode-安装-php-intellisense&quot;&gt;vscode 安装 PHP IntelliSense&lt;/h1&gt;
&lt;p&gt;左侧菜单栏扩展图标=&amp;gt;搜索输入框=&amp;gt;PHP IntelliSense=&amp;gt;点击安装&lt;/p&gt;
&lt;h1 id=&quot;php安装xdebug&quot;&gt;php安装xdebug&lt;/h1&gt;
&lt;p&gt;使用pecl工具来安装xdebug&lt;/p&gt;
&lt;h2 id=&quot;查找pecl工具的位置&quot;&gt;查找pecl工具的位置&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which pecl
/usr/local/bin/pecl #pecl工具所在目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;使用pecl工具安装xdebug&quot;&gt;使用pecl工具安装xdebug&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pecl install xdebug

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;创建zhaoqhu-php-ext-xdebugini&quot;&gt;创建zhaoqhu-php-ext-xdebug.ini&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zend_extension=xdebug
[xdebug]
xdebug.mode = debug 
xdebug.start_with_request = yes 
xdebug.client_port = 9001 
xdebug.client_host=192.168.100.226
xdebug.idekey=VSCODE
extension = php_screw_plus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;复制zhaoqhu-php-ext-xdebugini文件到php的配置文件目录下&quot;&gt;复制zhaoqhu-php-ext-xdebug.ini文件到php的配置文件目录下&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp /var/www/html/zhaoqhu-php-ext-xdebug.ini /usr/local/etc/php/conf.d/

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;检查zhaoqhu-php-ext-xdebugini文件的内容&quot;&gt;检查zhaoqhu-php-ext-xdebug.ini文件的内容&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm -f /usr/local/etc/php/conf.d/zhaoqhu-php-ext-xdebug.ini
cat /usr/local/etc/php/conf.d/zhaoqhu-php-ext-xdebug.ini
cat /var/www/html/zhaoqhu-php-ext-xdebug.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;vscode-配置launchjson文件&quot;&gt;vscode 配置launch.json文件&lt;/h1&gt;
&lt;p&gt;docker容器内的环境注意要添加pathMappings的配置，值为”server”:”local”&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;version&quot;: &quot;0.2.0&quot;,
    &quot;configurations&quot;: [
        {
            &quot;name&quot;: &quot;Listen for Xdebug&quot;,
            &quot;type&quot;: &quot;php&quot;,
            &quot;request&quot;: &quot;launch&quot;,
            &quot;port&quot;: 9001,
            &quot;pathMappings&quot;: {
                &quot;/var/www/html&quot;:&quot;/Users/zhaoqinghu/dev_docker/nextcloud/nextcloud&quot;
            }
        },
        {
            &quot;name&quot;: &quot;Launch currently open script&quot;,
            &quot;type&quot;: &quot;php&quot;,
            &quot;request&quot;: &quot;launch&quot;,
            &quot;program&quot;: &quot;${file}&quot;,
            &quot;cwd&quot;: &quot;${fileDirname}&quot;,
            &quot;port&quot;: 9001
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;调试&quot;&gt;调试&lt;/h1&gt;
&lt;p&gt;exec&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /sys/class/dmi/id/product_uuid
cat /sys/class/dmi/id/board_serial
cat /sys/class/dmi/id/board_name
cat /sys/class/dmi/id/
cat /sys/class/net/eth0/speed
cat /sys/class/net/eth0/status

		$product_uuid  = shell_exec('cat /sys/class/dmi/id/product_uuid');
		$board_serial  = shell_exec('cat /sys/class/dmi/id/board_serial');
		$board_name  = shell_exec('cat /sys/class/dmi/id/board_name');
		$product_name  = shell_exec('cat sys/class/dmi/id/product_name');
		$speed  = shell_exec('cat /sys/class/net/eth0/speed');
make -p /home/dmi/ &amp;amp;&amp;amp; cp -rf /sys/class/dmi/id/ /home/dmi/ &amp;amp;&amp;amp; chmod -R 777 /home/dmi/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Zhao Q.H.</name></author><summary type="html">vscode 安装 PHP Debug 扩展 左侧菜单栏扩展图标=&amp;gt;搜索输入框=&amp;gt;php debug=&amp;gt;点击安装 vscode 安装 PHP IntelliSense 左侧菜单栏扩展图标=&amp;gt;搜索输入框=&amp;gt;PHP IntelliSense=&amp;gt;点击安装 php安装xdebug 使用pecl工具来安装xdebug 查找pecl工具的位置 which pecl /usr/local/bin/pecl #pecl工具所在目录 使用pecl工具安装xdebug ``` pecl install xdebug</summary></entry></feed>