<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/atom.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-09-13T01:48:18+08:00</updated><id>http://localhost:4000/atom.xml</id><title type="html">Zhao Q.H.’s Notes</title><subtitle>Keep It Simple, Stupid</subtitle><author><name>Zhao Q.H.</name></author><entry><title type="html">php使用kafka</title><link href="http://localhost:4000/php/2021/09/12/php-kafka/" rel="alternate" type="text/html" title="php使用kafka" /><published>2021-09-12T00:00:00+08:00</published><updated>2021-09-12T00:00:00+08:00</updated><id>http://localhost:4000/php/2021/09/12/php-kafka</id><content type="html" xml:base="http://localhost:4000/php/2021/09/12/php-kafka/">&lt;ul&gt;
  &lt;li&gt;kafka基础架构和消息队列原理剖析&lt;/li&gt;
  &lt;li&gt;生产者与消费者模式原理解读&lt;/li&gt;
  &lt;li&gt;kafka flollwer如何与leader同步数据？&lt;/li&gt;
  &lt;li&gt;如何保证消息的幂等性、确认消费，避免重复消费&lt;/li&gt;
  &lt;li&gt;kafka的确认机制是如何保证的&lt;/li&gt;
  &lt;li&gt;必备kafka高可用集群搭建方案&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;zookeeper-server&quot;&gt;zookeeper Server&lt;/h1&gt;
&lt;h1 id=&quot;kafka&quot;&gt;kafka&lt;/h1&gt;

&lt;h1 id=&quot;队列&quot;&gt;队列&lt;/h1&gt;

&lt;h2 id=&quot;使用场景&quot;&gt;使用场景&lt;/h2&gt;
&lt;p&gt;京东618，秒杀场景。&lt;/p&gt;

&lt;h2 id=&quot;队列的作用&quot;&gt;队列的作用&lt;/h2&gt;
&lt;p&gt;解耦系统，异步，限流，消峰。&lt;/p&gt;

&lt;p&gt;服务器的性能，10w qps&lt;/p&gt;

&lt;p&gt;618活动时达到，200w qps&lt;/p&gt;

&lt;p&gt;使用队列把200w qps，分解到10w qps，保障系统正常的使用。&lt;/p&gt;

&lt;h3 id=&quot;异步&quot;&gt;异步&lt;/h3&gt;

&lt;h1 id=&quot;生产者与消费者模式原理解读&quot;&gt;生产者与消费者模式原理解读&lt;/h1&gt;

&lt;p&gt;zookeeper 负责管理kafka集群，比如kafka1挂掉，zookeeper负责自动链接到kafka2&lt;/p&gt;

&lt;p&gt;kafka的数据通过zookeeper&lt;/p&gt;

&lt;p&gt;kafka 1&lt;/p&gt;

&lt;p&gt;kafka 2&lt;/p&gt;

&lt;p&gt;kafka 3&lt;/p&gt;

&lt;h1 id=&quot;消息被确认消费&quot;&gt;消息被确认消费？&lt;/h1&gt;

&lt;h2 id=&quot;redis-队列-中小型&quot;&gt;Redis 队列 中小型&lt;/h2&gt;
&lt;p&gt;没有持久化的内容 
性能支持每秒10万级别吞吐量没问题。&lt;/p&gt;

&lt;h2 id=&quot;kafka-大型的系统&quot;&gt;kafka 大型的系统&lt;/h2&gt;
&lt;p&gt;每秒25万级别的吞吐量
批量读写
MMAP 内存映射&lt;/p&gt;

&lt;h1 id=&quot;php-使用kafka&quot;&gt;php 使用kafka&lt;/h1&gt;
&lt;p&gt;composer kafka&lt;/p&gt;

&lt;p&gt;composer require nmred/kafka-php&lt;/p&gt;

&lt;p&gt;use Kafka&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;class KafkaController extends Controller
{
    public function Producer(){
        //任务 消息内容. ---&amp;gt;3000 小猪的详细信息 订单信息
        $value = 'winner 的kafka';
        //主题
        $topic = 'order1';
        $config = Kafka\ProducerConfig::getInstance();
        $config-&amp;gt;setMetadataRefreshIntervalMs(metadataRefreshIntervalMs:10000);
        $config-&amp;gt;setMetadataBrokerList(list:'localhost:9092');
        $config-&amp;gt;setBrokerVersion(version:'1.0.0');
        //消息可靠
        //当ack模式为1时，服务端的消息会持久化发送到主副本leader
        //ack模式为0时，不会等待消息的持久化到主副本。
        //ack模式为2时，
        //可靠性:2&amp;gt;1&amp;gt;0
        //性能:0&amp;gt;1&amp;gt;2
        $config-&amp;gt;setRequiredAck(requiredAck:'1');
        //客户端生产消息的模式
        //同步
        //异步
        //发后即忘
        //性能：异步&amp;gt;同步&amp;gt;发后即忘
        $config-&amp;gt;setIsAsyn(asyn:false);
        $config-&amp;gt;setProduceInterval(produceInterval:500);
        $producer = new Kafka\Prodecer(function() use($value,$topic){
            return [
                [
                    'topic'=&amp;gt;$topic,
                    'value'=&amp;gt;$value,
                    'key =&amp;gt; '',
                ]
            ];
        });
        dump($producer);
        $producer-&amp;gt;success(function($result){
            dump($result);
        });
    }
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;消费者&quot;&gt;消费者&lt;/h1&gt;

&lt;p&gt;高级 如何保证消息可靠消费？&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;消息不能够被丢失，消息存在。
 生产者：ACK机制使用默认值1
 消费者：确认消费&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;序列器 
1次
2次
3次&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public function handle(){
    $config = Kafka\ConsumerConfig::getInstance();
    $config-&amp;gt;setMetadataRefreshInstervalMs(metadataRefreshIntervalMs:500);
    $config-&amp;gt;setMetadataBrokerList(list:'localhost:9092');
    //组
    $config-&amp;gt;setGroupId(groupId:'test1');
    $config-&amp;gt;setBrokerVersion(version:'1.0.0');
    $config-&amp;gt;setTopics(['order1']);
    //$config-&amp;gt;setOffsetReset('earliest);
    $consumer = new Kafka\Consumer();
    $consumer-&amp;gt;start(function($topic,$part,$message){
        var_dump($topic);
        var_dump($part);
        var_dump($message);
    });
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;子副本&quot;&gt;子副本&lt;/h1&gt;</content><author><name>Zhao Q.H.</name></author><category term="PHP" /><summary type="html">kafka基础架构和消息队列原理剖析 生产者与消费者模式原理解读 kafka flollwer如何与leader同步数据？ 如何保证消息的幂等性、确认消费，避免重复消费 kafka的确认机制是如何保证的 必备kafka高可用集群搭建方案</summary></entry><entry><title type="html">Mac系统查看隐藏文件</title><link href="http://localhost:4000/mac/2021/09/12/mac-01/" rel="alternate" type="text/html" title="Mac系统查看隐藏文件" /><published>2021-09-12T00:00:00+08:00</published><updated>2021-09-12T00:00:00+08:00</updated><id>http://localhost:4000/mac/2021/09/12/mac-01</id><content type="html" xml:base="http://localhost:4000/mac/2021/09/12/mac-01/">&lt;p&gt;在mac系统下，默认看不到隐藏的目录，比如.git目录，通过下面的方法可以切换是否显示。&lt;/p&gt;

&lt;h1 id=&quot;使用快捷键&quot;&gt;使用快捷键&lt;/h1&gt;
&lt;p&gt;Shift+Command+.
同时按下Shift和Command和.三个键切换显示状态。&lt;/p&gt;
&lt;h1 id=&quot;使用命令行&quot;&gt;使用命令行&lt;/h1&gt;
&lt;h2 id=&quot;显示&quot;&gt;显示&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.finder AppleShowAllFiles TRUE

killall Finder

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;隐藏&quot;&gt;隐藏&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;defaults write com.apple.finder AppleShowAllFiles FALSE

killall Finder
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Zhao Q.H.</name></author><category term="Mac" /><summary type="html">在mac系统下，默认看不到隐藏的目录，比如.git目录，通过下面的方法可以切换是否显示。</summary></entry><entry><title type="html">vscode 使用xdebug3.0.4调试</title><link href="http://localhost:4000/2021/07/10/vscode-xdebug/" rel="alternate" type="text/html" title="vscode 使用xdebug3.0.4调试" /><published>2021-07-10T00:00:00+08:00</published><updated>2021-07-10T00:00:00+08:00</updated><id>http://localhost:4000/2021/07/10/vscode-xdebug</id><content type="html" xml:base="http://localhost:4000/2021/07/10/vscode-xdebug/">&lt;h1 id=&quot;vscode-安装-php-debug-扩展&quot;&gt;vscode 安装 PHP Debug 扩展&lt;/h1&gt;
&lt;p&gt;左侧菜单栏扩展图标=&amp;gt;搜索输入框=&amp;gt;php debug=&amp;gt;点击安装&lt;/p&gt;
&lt;h1 id=&quot;vscode-安装-php-intellisense&quot;&gt;vscode 安装 PHP IntelliSense&lt;/h1&gt;
&lt;p&gt;左侧菜单栏扩展图标=&amp;gt;搜索输入框=&amp;gt;PHP IntelliSense=&amp;gt;点击安装&lt;/p&gt;
&lt;h1 id=&quot;php安装xdebug&quot;&gt;php安装xdebug&lt;/h1&gt;
&lt;p&gt;使用pecl工具来安装xdebug&lt;/p&gt;
&lt;h2 id=&quot;查找pecl工具的位置&quot;&gt;查找pecl工具的位置&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;which pecl
/usr/local/bin/pecl #pecl工具所在目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;使用pecl工具安装xdebug&quot;&gt;使用pecl工具安装xdebug&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pecl install xdebug

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;创建zhaoqhu-php-ext-xdebugini&quot;&gt;创建zhaoqhu-php-ext-xdebug.ini&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;zend_extension=xdebug
[xdebug]
xdebug.mode = debug 
xdebug.start_with_request = yes 
xdebug.client_port = 9001 
xdebug.client_host=192.168.100.226
xdebug.idekey=VSCODE
extension = php_screw_plus
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;复制zhaoqhu-php-ext-xdebugini文件到php的配置文件目录下&quot;&gt;复制zhaoqhu-php-ext-xdebug.ini文件到php的配置文件目录下&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp /var/www/html/zhaoqhu-php-ext-xdebug.ini /usr/local/etc/php/conf.d/

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;检查zhaoqhu-php-ext-xdebugini文件的内容&quot;&gt;检查zhaoqhu-php-ext-xdebug.ini文件的内容&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rm -f /usr/local/etc/php/conf.d/zhaoqhu-php-ext-xdebug.ini
cat /usr/local/etc/php/conf.d/zhaoqhu-php-ext-xdebug.ini
cat /var/www/html/zhaoqhu-php-ext-xdebug.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;vscode-配置launchjson文件&quot;&gt;vscode 配置launch.json文件&lt;/h1&gt;
&lt;p&gt;docker容器内的环境注意要添加pathMappings的配置，值为”server”:”local”&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
    &quot;version&quot;: &quot;0.2.0&quot;,
    &quot;configurations&quot;: [
        {
            &quot;name&quot;: &quot;Listen for Xdebug&quot;,
            &quot;type&quot;: &quot;php&quot;,
            &quot;request&quot;: &quot;launch&quot;,
            &quot;port&quot;: 9001,
            &quot;pathMappings&quot;: {
                &quot;/var/www/html&quot;:&quot;/Users/zhaoqinghu/dev_docker/nextcloud/nextcloud&quot;
            }
        },
        {
            &quot;name&quot;: &quot;Launch currently open script&quot;,
            &quot;type&quot;: &quot;php&quot;,
            &quot;request&quot;: &quot;launch&quot;,
            &quot;program&quot;: &quot;${file}&quot;,
            &quot;cwd&quot;: &quot;${fileDirname}&quot;,
            &quot;port&quot;: 9001
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;调试&quot;&gt;调试&lt;/h1&gt;
&lt;p&gt;exec&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat /sys/class/dmi/id/product_uuid
cat /sys/class/dmi/id/board_serial
cat /sys/class/dmi/id/board_name
cat /sys/class/dmi/id/
cat /sys/class/net/eth0/speed
cat /sys/class/net/eth0/status

		$product_uuid  = shell_exec('cat /sys/class/dmi/id/product_uuid');
		$board_serial  = shell_exec('cat /sys/class/dmi/id/board_serial');
		$board_name  = shell_exec('cat /sys/class/dmi/id/board_name');
		$product_name  = shell_exec('cat sys/class/dmi/id/product_name');
		$speed  = shell_exec('cat /sys/class/net/eth0/speed');
make -p /home/dmi/ &amp;amp;&amp;amp; cp -rf /sys/class/dmi/id/ /home/dmi/ &amp;amp;&amp;amp; chmod -R 777 /home/dmi/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Zhao Q.H.</name></author><summary type="html">vscode 安装 PHP Debug 扩展 左侧菜单栏扩展图标=&amp;gt;搜索输入框=&amp;gt;php debug=&amp;gt;点击安装 vscode 安装 PHP IntelliSense 左侧菜单栏扩展图标=&amp;gt;搜索输入框=&amp;gt;PHP IntelliSense=&amp;gt;点击安装 php安装xdebug 使用pecl工具来安装xdebug 查找pecl工具的位置 which pecl /usr/local/bin/pecl #pecl工具所在目录 使用pecl工具安装xdebug ``` pecl install xdebug</summary></entry><entry><title type="html">Mac系统下设置全局默认的php版本和Mysql的版本</title><link href="http://localhost:4000/php/2021/04/18/mac-default-php-mysql/" rel="alternate" type="text/html" title="Mac系统下设置全局默认的php版本和Mysql的版本" /><published>2021-04-18T00:00:00+08:00</published><updated>2021-04-18T00:00:00+08:00</updated><id>http://localhost:4000/php/2021/04/18/mac-default-php-mysql</id><content type="html" xml:base="http://localhost:4000/php/2021/04/18/mac-default-php-mysql/">&lt;h1 id=&quot;mac系统下设置全局默认的php版本&quot;&gt;Mac系统下设置全局默认的php版本&lt;/h1&gt;
&lt;p&gt;Mac系统版本Mac OS big Sur，这个版本的系统默认装的php版本是php7.3.24 ,可能你还会在自己的电脑上安装其他的php版本，比如php5,php7.1.5,,php7.4.16。如果电脑上面装了多个版本的php，可以指定某一个版本的php为全局默认的，假如我们设定全局默认的php版本是php7.1.5&lt;/p&gt;
&lt;h2 id=&quot;找到php715版本bin目录下的二进制可执行的php文件&quot;&gt;找到php7.1.5版本bin目录下的二进制可执行的php文件&lt;/h2&gt;
&lt;p&gt;所在目录的路径为&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/php7-15/bin/php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;找到-zshrc&quot;&gt;找到 ~/.zshrc&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~/
ls -al #列出目录下面所有文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;修改-zshrc&quot;&gt;修改 ~/.zshrc&lt;/h2&gt;
&lt;p&gt;使用超级管理员的权限命令打开.zshrc文件&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将下面的设定php全局变量的命令粘贴到.zshrc文件中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;export PATH=&quot;/usr/local/php7-15/bin:$PATH&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;重新载入-zshrc文件&quot;&gt;重新载入 ~/.zshrc文件&lt;/h2&gt;

&lt;p&gt;执行下面的命令重新载入.zshrc文件，使添加的php全局变量执行文件生效。&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;source ~/.zshrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;mysql设置指定版本为全局变量&quot;&gt;MySQL设置指定版本为全局变量&lt;/h1&gt;
&lt;p&gt;指定方法可以参考设定PHP指定版本为全局变量的方法。&lt;/p&gt;</content><author><name>Zhao Q.H.</name></author><category term="PHP" /><summary type="html">Mac系统下设置全局默认的php版本 Mac系统版本Mac OS big Sur，这个版本的系统默认装的php版本是php7.3.24 ,可能你还会在自己的电脑上安装其他的php版本，比如php5,php7.1.5,,php7.4.16。如果电脑上面装了多个版本的php，可以指定某一个版本的php为全局默认的，假如我们设定全局默认的php版本是php7.1.5 找到php7.1.5版本bin目录下的二进制可执行的php文件 所在目录的路径为 /usr/local/php7-15/bin/php 找到 ~/.zshrc cd ~/ ls -al #列出目录下面所有文件 修改 ~/.zshrc 使用超级管理员的权限命令打开.zshrc文件 sudo vim ~/.zshrc 将下面的设定php全局变量的命令粘贴到.zshrc文件中</summary></entry><entry><title type="html">Php7.4.16</title><link href="http://localhost:4000/2021/04/18/php7.4.16/" rel="alternate" type="text/html" title="Php7.4.16" /><published>2021-04-18T00:00:00+08:00</published><updated>2021-04-18T00:00:00+08:00</updated><id>http://localhost:4000/2021/04/18/php7.4.16</id><content type="html" xml:base="http://localhost:4000/2021/04/18/php7.4.16/">&lt;p&gt;apcu
bcmath
Core
ctype
curl
date
dom
exif
fileinfo
filter
ftp
gd
gmp
hash
iconv
imagick
intl
json
ldap
libxml
mbstring
memcached
mysqlnd
openssl
pcntl
pcre
PDO
pdo_mysql
pdo_pgsql
pdo_sqlite
Phar
posix
readline
redis
Reflection
session
SimpleXML
sodium
SPL
sqlite3
standard
tokenizer
xml
xmlreader
xmlwriter
Zend OPcache
zip
zlib&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/usr/local/etc/php/conf.d/docker-php-ext-apcu.ini, 
/usr/local/etc/php/conf.d/docker-php-ext-bcmath.ini,
 /usr/local/etc/php/conf.d/docker-php-ext-exif.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-gd.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-gmp.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-imagick.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-intl.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-ldap.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-memcached.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-pcntl.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-pdo_mysql.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-pdo_pgsql.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-redis.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-sodium.ini, 
 /usr/local/etc/php/conf.d/docker-php-ext-zip.ini, 
 /usr/local/etc/php/conf.d/nextcloud.ini, 
 /usr/local/etc/php/conf.d/opcache-recommended.ini
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'./configure' '--build=x86_64-linux-gnu' '--with-config-file-path=/usr/local/etc/php' '--with-config-file-scan-dir=/usr/local/etc/php/conf.d' '--enable-option-checking=fatal' '--with-mhash' '--with-pic' '--enable-ftp' '--enable-mbstring' '--enable-mysqlnd' '--with-password-argon2' '--with-sodium=shared' '--with-pdo-sqlite=/usr' '--with-sqlite3=/usr' '--with-curl' '--with-libedit' '--with-openssl' '--with-zlib' '--with-pear' '--with-libdir=lib/x86_64-linux-gnu' '--with-apxs2' '--disable-cgi' 'build_alias=x86_64-linux-gnu'

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;'./configure' '--build=x86_64-linux-gnu' '--with-config-file-path=/usr/local/etc/php' '--with-config-file-scan-dir=/usr/local/etc/php/conf.d' '--enable-option-checking=fatal' '--with-mhash' '--with-pic' '--enable-ftp' '--enable-mbstring' '--enable-mysqlnd' '--with-password-argon2' '--with-sodium=shared' '--with-pdo-sqlite=/usr' '--with-sqlite3=/usr' '--with-curl' '--with-libedit' '--with-openssl' '--with-zlib' '--with-pear' '--with-libdir=lib/x86_64-linux-gnu' '--with-apxs2' '--disable-cgi' 'build_alias=x86_64-linux-gnu'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./configure --prefix=/usr/local/php-7.2.9 \
	--with-config-file-path=/usr/local/php-7.2.9/etc \
	--with-mysql=mysqlnd \
	--with-mysqli=mysqlnd \
	--with-pdo-mysql=mysqlnd \
	--enable-fpm \
	--enable-fastcgi \
	--enable-static \
	--enable-inline-optimization \
	--enable-sockets \
	--enable-wddx \
	--enable-zip \
	--enable-calendar \
	--enable-bcmath \
	--enable-soap \
	--with-zlib \
	--with-iconv \
	--with-gd \
	--with-xmlrpc \
	--enable-mbstring \
	--without-sqlite \
	--with-curl \
	--enable-ftp \
	--with-mcrypt  \
	--with-freetype-dir \
	--with-jpeg-dir \
	--with-png-dir \
	--disable-ipv6 \
	--disable-debug \
	--with-openssl \
	--disable-maintainer-zts \
	--disable-safe-mode \
	--disable-fileinfo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Zhao Q.H.</name></author><summary type="html">apcu bcmath Core ctype curl date dom exif fileinfo filter ftp gd gmp hash iconv imagick intl json ldap libxml mbstring memcached mysqlnd openssl pcntl pcre PDO pdo_mysql pdo_pgsql pdo_sqlite Phar posix readline redis Reflection session SimpleXML sodium SPL sqlite3 standard tokenizer xml xmlreader xmlwriter Zend OPcache zip zlib</summary></entry><entry><title type="html">nextcloud yml安装</title><link href="http://localhost:4000/nextcloud/2021/03/09/nextcloud-yml/" rel="alternate" type="text/html" title="nextcloud yml安装" /><published>2021-03-09T00:00:00+08:00</published><updated>2021-03-09T00:00:00+08:00</updated><id>http://localhost:4000/nextcloud/2021/03/09/nextcloud-yml</id><content type="html" xml:base="http://localhost:4000/nextcloud/2021/03/09/nextcloud-yml/">&lt;h2 id=&quot;创建nextcloud安装目录&quot;&gt;创建nextcloud安装目录&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir nextcloud
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;创建mysql目录用于数据卷映射&quot;&gt;创建mysql目录用于数据卷映射&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~/nextcloud
mkdir mysql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;创建nextcloud文件目录用于映射&quot;&gt;创建nextcloud文件目录用于映射&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd nextcloud
mkdir nextcloud
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;创建docker-composeyml文件内容如下&quot;&gt;创建docker-compose.yml文件，内容如下&lt;/h2&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;version: '2'

volumes:
  nextcloud:
  db:

services:
  db:
    image: mysql
    restart: always
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - /Users/zhaoqinghu/dev_docker/nextcloud/mysql:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=12345678
      - MYSQL_PASSWORD=nextcloud
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud

  app:
    image: nextcloud
    restart: always
    ports:
      - 7080:80
    links:
      - db
    volumes:
      - /Users/zhaoqinghu/dev_docker/nextcloud/nextcloud:/var/www/html
    environment:
      - MYSQL_PASSWORD=
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MYSQL_HOST=db

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Zhao Q.H.</name></author><category term="nextcloud" /><summary type="html">创建nextcloud安装目录 mkdir nextcloud 创建mysql目录用于数据卷映射 cd ~/nextcloud mkdir mysql 创建nextcloud文件目录用于映射 cd nextcloud mkdir nextcloud 创建docker-compose.yml文件，内容如下 ``` version: ‘2’</summary></entry><entry><title type="html">php面试</title><link href="http://localhost:4000/php/2021/02/05/php-ms/" rel="alternate" type="text/html" title="php面试" /><published>2021-02-05T00:00:00+08:00</published><updated>2021-02-05T00:00:00+08:00</updated><id>http://localhost:4000/php/2021/02/05/php-ms</id><content type="html" xml:base="http://localhost:4000/php/2021/02/05/php-ms/">&lt;h2 id=&quot;线程和进程的区别&quot;&gt;线程和进程的区别&lt;/h2&gt;

&lt;p&gt;简而言之,一个程序至少有一个进程,一个进程至少有一个线程&lt;/p&gt;

&lt;p&gt;php-fpm是一个主进程master和多个工作进程worker，每个php-fpm进程有一个线程。&lt;/p&gt;

&lt;p&gt;1、php的哪些语言特性，在合适的场景可以显著减少内存开销？
spl
trait
Generator
type hint
2、对于php的自动加载描述正确的是？
Composer的自动加载是通过__autoload函数实现
在文件顶部use的时候会载入对应的类
自动加载函数只支持按Class/Interface/Trait名加载，不能按function名加载
现在大多数类库都遵循psr0规范
3、对于Trait描述正确的是
可以用来减少重复代码
一个类无法同时引入两个包含相同方法的Trait
子类中引入的Trait利的方法会覆盖父类的方法
在Trait中不可以调用引用类里的方法
4、下列对Composer描述正确的是
拿到一个Project类型的项目时，需要通过composer update来安装对应的依赖包
一般情况下应该把PHPUnit包含在require段
composer.json不仅可以指定依赖的PHP类库，还能指定依赖的PHP扩展
Library类型的项目，需要把composer.lock文件提交到版本库中
5、如果一个包遵循Semantic Version，下列哪些版本升级大概率不会出问题
6、按照RESTFul的规范，修改文章的展示隐藏应该使用哪一种路由
7、通常使用过滤特殊字符的方式来避免SQL注入
8、只要项目中使用了PDO的prepare就能完全避免SQL注入
9、CSRF攻击是因为没有对用户输入进行转义导致的
14、为了避免XSS攻击，需要在写入数据库前对其转义，从数据库读取后反转义&lt;/p&gt;</content><author><name>Zhao Q.H.</name></author><category term="PHP" /><summary type="html">线程和进程的区别</summary></entry><entry><title type="html">Elasticsearch 学习</title><link href="http://localhost:4000/2021/02/04/Elesticsearch/" rel="alternate" type="text/html" title="Elasticsearch 学习" /><published>2021-02-04T00:00:00+08:00</published><updated>2021-02-04T00:00:00+08:00</updated><id>http://localhost:4000/2021/02/04/Elesticsearch</id><content type="html" xml:base="http://localhost:4000/2021/02/04/Elesticsearch/"></content><author><name>Zhao Q.H.</name></author><summary type="html"></summary></entry><entry><title type="html">php高级教程-大型电商平台双十一Redis高并发秒杀解决方案</title><link href="http://localhost:4000/php/2021/01/28/php-redis-seckill/" rel="alternate" type="text/html" title="php高级教程-大型电商平台双十一Redis高并发秒杀解决方案" /><published>2021-01-28T00:00:00+08:00</published><updated>2021-01-28T00:00:00+08:00</updated><id>http://localhost:4000/php/2021/01/28/php-redis-seckill</id><content type="html" xml:base="http://localhost:4000/php/2021/01/28/php-redis-seckill/">&lt;h2 id=&quot;使用场景介绍&quot;&gt;使用场景介绍&lt;/h2&gt;
&lt;h3 id=&quot;秒杀红包&quot;&gt;秒杀红包&lt;/h3&gt;
&lt;p&gt;1、时间短、数量少
2、大流量、高并发&lt;/p&gt;

&lt;h3 id=&quot;数据安全&quot;&gt;数据安全&lt;/h3&gt;
&lt;p&gt;1、业务场景、高并发会引发问题
2、压力测试工具的使用
3、悲观锁、乐观锁、lua脚本
4、不同场景的解决方案
2.2redis一些相关的原理（10服用、原子性）&lt;/p&gt;

&lt;h3 id=&quot;秒杀场景遇到的问题&quot;&gt;秒杀场景遇到的问题&lt;/h3&gt;
&lt;p&gt;1、卡顿崩溃
2、超卖（库存变为负数）&lt;/p&gt;

&lt;p&gt;模拟秒杀库存只有3件的商品，如果用压力测试工具进行模拟500人进行秒杀的情况，比如发送了5000次链接，如果不做处理
一定会出现商品超卖的情况，实际成功的订单会大于3个，商品库存会变成负数，比如-36，那实际上成功的订单会是39个订单，超卖了36件，这样子就赔钱了。&lt;/p&gt;
&lt;h2 id=&quot;使用压力测试工具模拟高并发场景&quot;&gt;使用压力测试工具模拟高并发场景&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ab -n 请求数 -c 并发数 url地址
ab -n 500 -c 5000 http://127.0.0.1/seckill/buy.php #模拟500个客户端发送5000个请求
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;解决办法&quot;&gt;解决办法&lt;/h2&gt;
&lt;h3 id=&quot;数据库悲观锁&quot;&gt;数据库悲观锁&lt;/h3&gt;

&lt;h3 id=&quot;redis&quot;&gt;redis&lt;/h3&gt;
&lt;p&gt;1、redis速度快（单机的读写速度可以达到8万左右）
2、数据限制
悲观锁：假设当前的数据操作一定会发生冲突的，屏蔽一切（行锁、文件锁）&lt;/p&gt;

&lt;p&gt;如果用mysql的行锁会导致阻塞、等待状态，会崩溃。
性能差，速度慢。&lt;/p&gt;

&lt;p&gt;乐观锁：假设当前的数据不会发生并发冲突，在真写数据的时候，再去检查，有没有发生冲突。&lt;/p&gt;

&lt;p&gt;苹果商店排行20的App
淘宝客
双十一销售额，5亿，每秒并发14w&lt;/p&gt;</content><author><name>Zhao Q.H.</name></author><category term="PHP" /><category term="PHP" /><summary type="html">使用场景介绍 秒杀红包 1、时间短、数量少 2、大流量、高并发</summary></entry><entry><title type="html">Redis nginx memcached</title><link href="http://localhost:4000/redis/nginx/memcached/2021/01/25/Redis-nginx-memchached/" rel="alternate" type="text/html" title="Redis nginx memcached" /><published>2021-01-25T00:00:00+08:00</published><updated>2021-01-25T00:00:00+08:00</updated><id>http://localhost:4000/redis/nginx/memcached/2021/01/25/Redis-nginx-memchached</id><content type="html" xml:base="http://localhost:4000/redis/nginx/memcached/2021/01/25/Redis-nginx-memchached/"></content><author><name>Zhao Q.H.</name></author><summary type="html"></summary></entry></feed>